#!/usr/bin/env php
<?php

require_once 'vendor/autoload.php';

use Nova\Cli\ControllerCommand;
use Nova\Cli\ModelCommand;
use Nova\Cli\EncryptionCommand;
use Nova\Cli\ClearCacheCommand;
use Nova\Cli\ClearSessionsCommand;
use Nova\Cli\ClearLogsCommand;

use Nova\Container\Container;
use Nova\Config\FileLoader;
use Nova\Config\Repository as ConfigRepository;
use Nova\Filesystem\Filesystem;
use Nova\Foundation\AliasLoader;
use Nova\Support\Facades\Facade;

use Symfony\Component\Console\Application;


//--------------------------------------------------------------------------
// Define The Application Paths
//--------------------------------------------------------------------------

defined('DS') || define('DS', DIRECTORY_SEPARATOR);

/** Define the absolute paths for configured directories. */
define('ROOTDIR', realpath(__DIR__) .DS);

define('APPDIR', ROOTDIR .'app' .DS);

define('PUBLICDIR', ROOTDIR .'webroot' .DS);

//--------------------------------------------------------------------------
// Set The System Path
//--------------------------------------------------------------------------

define('SYSTEMDIR', ROOTDIR .str_replace('/', DS, 'vendor/nova-framework/system/'));

//--------------------------------------------------------------------------
// Set The Storage Path
//--------------------------------------------------------------------------

define('STORAGE_PATH', ROOTDIR .'storage' .DS);

//--------------------------------------------------------------------------
// Load Global Configuration
//--------------------------------------------------------------------------

$path = APPDIR .'Config.php';

if (is_readable($path)) require $path;

//--------------------------------------------------------------------------
// Setup The IoC Container
//--------------------------------------------------------------------------

$container = new Container();

$container->instance('app', $container);

//--------------------------------------------------------------------------
// Load The Framework Facades
//--------------------------------------------------------------------------

Facade::clearResolvedInstances();

Facade::setFacadeApplication($container);

//--------------------------------------------------------------------------
// Register The Filesystem
//--------------------------------------------------------------------------

$container->bindShared('files', function()
{
    return new Filesystem();
});

//--------------------------------------------------------------------------
// Register The Config Manager
//--------------------------------------------------------------------------

$container->instance('config', $config = new ConfigRepository(
    new FileLoader($container['files'], APPDIR .'Config'), 'production'
));

//--------------------------------------------------------------------------
// Set The Default Timezone From Configuration
//--------------------------------------------------------------------------

$config = $container['config']['app'];

date_default_timezone_set($config['timezone']);

//--------------------------------------------------------------------------
// Register The Alias Loader
//--------------------------------------------------------------------------

$aliases = $config['aliases'];

AliasLoader::getInstance($aliases)->register();

//--------------------------------------------------------------------------
// Create New Symfony Application
//--------------------------------------------------------------------------

$console = new Application('Nova Framework Command Line Interface for v3.0', '1.3.0');

//--------------------------------------------------------------------------
// Register The Symfony Commands
//--------------------------------------------------------------------------

$console->add(new ControllerCommand());
$console->add(new ModelCommand());
$console->add(new EncryptionCommand());
$console->add(new ClearCacheCommand());
$console->add(new ClearSessionsCommand());
$console->add(new ClearLogsCommand());

//--------------------------------------------------------------------------
// Execute The Symfony Application
//--------------------------------------------------------------------------

$console->run();
